Create database Adidas;

use Adidas;

drop table Adidas_US_Sales_Dataset;

CREATE TABLE Adidas_US_Sales_Dataset(
    Retailer VARCHAR(100),
    Retailer_ID BIGINT,
    Invoice_Date DATE,
    Region VARCHAR(50),
    State VARCHAR(50),
    City VARCHAR(50),
    Product VARCHAR(100),
    Price_per_Unit DECIMAL(10,2),
    Units_Sold INT,
    Total_Sales BIGINT,
    Operating_Profit BIGINT,
    Operating_Margin DECIMAL(5,2),
    Sales_Method VARCHAR(50)
);

LOAD DATA INFILE '/path/to/file.csv'
INTO TABLE tablename
FIELDS TERMINATED BY ','
ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 ROWS;

select * from Adidas_US_Sales_Dataset;

select count(*) from Adidas_US_Sales_Dataset;

-- Section 1 Use CTEs and window functions to analyze sales trends over time and rank top-performing products by revenue and profit.

-- 1. What are the top-performing products based on total revenue?

with Product_Revenue as (select Product, Sum(Total_Sales) as Revenue from Adidas_US_Sales_Dataset
Group by Product
Order by Sum(Total_Sales) desc)
select Product, Revenue, Rank() over(order by Revenue desc) as Ranking from Product_Revenue;

-- 2. Which products generate the most operating profit?

with Productwise_profit as (select Product, Sum(Operating_profit) as Total_Productwise_Profit from Adidas_US_Sales_Dataset
Group by product
order by Sum(Operating_profit) desc),
Rankingprofit as (select Product, Total_Productwise_Profit, Rank() over(order by Total_Productwise_profit desc) as Ranking
from productwise_profit)
select Product, Total_Productwise_Profit from Rankingprofit
where Ranking = 1;

-- 3. How have total sales evolved month-over-month?

select * from Adidas_US_Sales_Dataset;

with Monthwise_sales as (select month(Invoice_Date) as Invoice_Month, Sum(Total_sales) as Monthwise_Sales from Adidas_US_Sales_Dataset
Group by Invoice_Month)
select Invoice_Month, Monthwise_Sales, Lag(Monthwise_sales) over(order by Invoice_Month) as MOM from Monthwise_sales;

-- 4. Rank products by revenue within each month top 5

select * from Adidas_US_Sales_Dataset;

with Monthwise_salesdata as (select product, month(Invoice_Date) as Invoice_Month, 
Sum(Total_Sales) as Monthwise_sales 
from Adidas_US_Sales_Dataset
group by Product, Invoice_Month),
Rankingwise as (select Product, Invoice_Month, Monthwise_sales, 
rank() over(partition by product order by Monthwise_sales desc) as Ranking from Monthwise_salesdata
ORDER BY Product, Invoice_Month)
select Product, Invoice_Month, Monthwise_sales, Ranking from Rankingwise 
where Ranking between 1 and 5
ORDER BY product, Ranking;

-- Section 2 -- Write subqueries to calculate average unit price, total units sold, and profit margins across product categories and states.

-- 1. Write subqueries to calculate products greater than average unit price

select * from Adidas_US_Sales_Dataset;

select Product from Adidas_US_Sales_Dataset 
where Price_per_Unit > (select ceil(Round(Avg(Price_per_Unit),2)) as AverageUnitPrice from Adidas_US_Sales_Dataset)
group by product;

-- 2. Write Subquery to calculate Total Units sold and which region sold maximum units

select * from Adidas_US_Sales_Dataset;

with cte as (select Region, sum(Units_Sold) as Total_Units_Sold from Adidas_US_Sales_Dataset
group by Region
order by sum(Units_Sold) desc)
select Region from cte
where Total_Units_Sold = (select max(Total_Units_Sold) as Maxunitsold from cte);

-- 3.What is the overall profit margin for each state.

select * from Adidas_US_Sales_Dataset;

-- without subquery
select state, Round((sum(operating_profit) / sum(total_sales))*100,2) as profit_margin from Adidas_US_Sales_Dataset
Group by State;

-- with subquery
select state, Round((statewise_profit / statewise_sale)*100,2) as profit_marggin from
(select state, sum(operating_profit) as statewise_profit, sum(total_sales) as statewise_sale from Adidas_US_Sales_Dataset
group by state) as summary;


-- section 3 -- Use aggregation and grouping to compare total sales, units sold, and operating profit across cities and sales methods.

-- 1. what is the total sales generated by each city

select * from Adidas_US_Sales_Dataset;

select city, sum(total_sales) as citywise_sales from Adidas_US_Sales_Dataset
Group by city
order by sum(Total_Sales);

-- 2. what is the count of units sold by each region

select * from Adidas_US_Sales_Dataset;

select Region, count(units_Sold) as Regionwise_count from Adidas_US_Sales_Dataset
Group by region
Order by count(units_Sold);

-- 3. What is the operating profit based on sales_method

select * from Adidas_US_Sales_Dataset;

select Sales_Method, Avg(Operating_profit) as Methodwise_profit from Adidas_US_Sales_Dataset
Group by Sales_Method
Order by avg(Operating_profit);

-- section 4 -- Apply filtering and joins (if other tables exist) to examine regional sales patterns and performance in different product lines.

-- 1. filter the highest Sales by Month

select * from Adidas_US_Sales_Dataset;

select Month(Invoice_Date) as Monthwise_sales, sum(Total_sales) as Highest_sale from Adidas_us_sales_dataset
Group by Monthwise_Sales
Order by sum(Total_sales) desc limit 1;

-- 2. Filter the minimum units sold based on product line

select * from Adidas_US_Sales_Dataset;

select Product, min(units_sold) as minimum from Adidas_Us_sales_dataset
group by product
order by min(units_sold);

-- 3. Filter the profit based on sales_method

select * from Adidas_US_Sales_Dataset;

select Sales_Method, Sum(Operating_profit) as Methodwise_Profit from Adidas_US_Sales_Dataset
Group by Sales_Method
Order by Sum(Operating_profit) desc;

-- 4. Filter the Sales with State contain 'c' in any place

select * from Adidas_US_Sales_Dataset;

select State, sum(Total_sales) as Statewise_Sales from Adidas_US_Sales_Dataset
where State like "%C%"
Group by State;

-- 5. Filter the 3rd highest City by profit

select * from Adidas_US_Sales_Dataset;

with cte as(select City, sum(Operating_profit) as citywise_profit from Adidas_US_Sales_Dataset
group by City),
Rankingprofit as(select city, citywise_profit, dense_rank() over(order by citywise_profit desc) as Ranking from cte)
select city, citywise_profit,Ranking from Rankingprofit
where Ranking = 3;












